configfile: "workflow/config/pipeline.yaml"
rawdata = Path(config["directories"]["rawdata"])
procdata = Path(config["directories"]["procdata"])
metadata = Path(config["directories"]["metadata"])
results = Path(config["directories"]["results"])
logs = Path(config["directories"]["logs"])
version = config["GDSC_version"]
release = config["GDSC_release"]


include: "rules/metadata.smk"
include: "rules/treatmentResponse.smk"
include: "rules/rnaseq.smk"
include: "rules/microarray.smk"
include: "rules/cnv.smk"
include: "rules/mutation.smk"
include: "rules/fusion.smk"


rule get_Pharmacoset:
    input:
        expand(
            results / "data" / "{version}_{release}_Pharmacoset.RDS",
                # version = ["GDSC1", "GDSC2"],#version,
                # release = [8.2, 8.4, 8.5]#release       
                version = version,
                release = release       
            )

rule build_Pharmacoset:
    input:
        treatmentResponseExperiment = 
            results / "data" / "{version}_{release}_treatmentResponseExperiment_fitted.RDS",
        annotated_treatmentMetadata = 
            results / "data" / "metadata" / "GDSC_{release}_treatmentMetadata_annotated.tsv",
        annotated_sampleMetadata = 
            results / "data"  / "metadata" / "GDSC_{release}_sampleMetadata_mappedCellosaurus.tsv",
        geneAnnotation = 
            procdata / metadata / "preprocessed_geneAnnotation.tsv",
        summarizedExperimentLists = [
            # rules.make_MICROARRAY_SE.output.microarray_SE,
            rules.make_RNASEQ_SE.output.rse_list,
            rules.make_CNV_SE.output.rse_list,
            rules.make_MUTATION_SE.output.rse_list,
            rules.make_FUSION_SE.output.rse_list,
    ],
    output:
        results / "data" / "{version}_{release}_Pharmacoset.RDS",
    log:
        logs / "{version}_{release}_build_Pharmacoset.log",
    conda: "envs/snakemake.yaml"
    script:
        "scripts/build_PharmacoSet.R"
